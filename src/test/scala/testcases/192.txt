
    int zeroOne_myAttemp(){
      for ( i = place; i < numItem; i) {
        if (last_one || no_more_space(i == numItem - 1) || (size - itemSize == 0)) {
          if (itemSize > size) {
            if (value > max){
              max = value;
              return;
            }
            if (value + itemValue[at(i)] > max)
              max = value + itemValue;
            return;
          }
          if (size < itemSize)
            continue;
          for (j = 1; j < numItem - i + 1;j+1) {
            findMax(size - itemSizeat(i),i + j,value + itemValue[at(i)]);
          }
        }
      }
      return max;
    }
    