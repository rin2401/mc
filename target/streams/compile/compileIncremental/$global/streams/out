[0m[[0m[0mdebug[0m] [0m[0mInvalidating C:\Users\rin.RIN\Desktop\ass2\.\external\antlr-4.6-complete.jar: class org.antlr.v4.runtime.Token now provided by D:\HK171\NLNNLT\Assignment\mc\external\antlr-4.6-complete.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\Utils.scala, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\src_managed\main\src\main\mc\parser\MCVisitor.java, C:\Users\rin\Desktop\ass2\target\scala-2.12\src_managed\main\src\main\mc\parser\MCBaseVisitor.java, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\src_managed\main\src\main\mc\parser\MCLexer.java, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\astgen\ASTGeneration.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\BaseVisitor.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\parser\ProcessError.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\Main.scala, C:\Users\rin\Desktop\ass2\target\scala-2.12\src_managed\main\src\main\mc\parser\MCVisitor.java, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\checker\StaticCheck.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\AST.scala, C:\Users\rin\Desktop\ass2\target\scala-2.12\src_managed\main\src\main\mc\parser\MCLexer.java, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\Visitor.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\checker\StaticError.scala, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\src_managed\main\src\main\mc\parser\MCBaseVisitor.java, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\src_managed\main\src\main\mc\parser\MCParser.java)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(D:\HK171\NLNNLT\Assignment\mc\target\scala-2.12\src_managed\main\src\main\mc\parser\MCBaseVisitor.java, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\checker\StaticError.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\utils\Visitor.scala, D:\HK171\NLNNLT\Assignment\mc\target\scala-2.12\src_managed\main\src\main\mc\parser\MCParser.java, D:\HK171\NLNNLT\Assignment\mc\target\scala-2.12\src_managed\main\src\main\mc\parser\MCVisitor.java, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\astgen\ASTGeneration.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\utils\Utils.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\parser\ProcessError.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\utils\BaseVisitor.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\Main.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\utils\AST.scala, D:\HK171\NLNNLT\Assignment\mc\target\scala-2.12\src_managed\main\src\main\mc\parser\MCLexer.java, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\checker\StaticCheck.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\StringLiteral.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\ArrayCell.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\BooleanLiteral.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Expr.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Stmt.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\IntType$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\UnaryOp.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Break$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\UnreachableStatement.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\TypeMismatchInStatement.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\BoolType.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Identifier$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\FloatLiteral.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\VoidType.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Dowhile$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Utils.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\CallExpr$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\FunctionNotReturn$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Undeclared$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\If$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\Timed.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Helper.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Parameter.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Redeclared.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\parser\NeverHappen.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Dowhile.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\IntLiteral.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Continue.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Kind.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\VoidType$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Id$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\BinaryOp$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Return$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Id.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\BaseVisitor.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Function.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\FloatLiteral$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\VarDecl.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\FloatType$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Function$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Identifier.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\BreakNotInLoop$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\TypeMismatchInStatement$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Literal.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Program.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\parser\IllegalEscape.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Variable.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\ContinueNotInLoop.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\ArrayType.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\BinaryOp.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\For.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\parser\ErrorToken.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Undeclared.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\TypeMismatchInExpression$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Parameter$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Redeclared$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\TypeMismatchInExpression.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\StaticChecker.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\ArrayCell$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\parser\UncloseString.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Block.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\IntType.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\Timed$$anon$1.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Continue$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\StringType.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\FuncDecl$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\BreakNotInLoop.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\Variable$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\FloatType.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Decl.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\VarDecl$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Block$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\LHS.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Visitor.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\StringType$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\parser\ProcessError$$anon$1.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Program$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\StringLiteral$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\Compiler$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\UnreachableStatement$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Break.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\BoolType$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\parser\NeverHappen$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\For$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\IntLiteral$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\FunctionNotReturn.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\astgen\ASTGeneration.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\AST.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Type.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\BooleanLiteral$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\ArrayPointerType.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\CallExpr.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\checker\ContinueNotInLoop$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\If.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\ArrayPointerType$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\UnaryOp$.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\parser\ProcessError.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\Compiler.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\Return.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\FuncDecl.class, C:\Users\rin.RIN\Desktop\ass2\target\scala-2.12\classes\mc\utils\ArrayType$.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(C:\Users\rin.RIN\Desktop\ass2\.\external\antlr-4.6-complete.jar)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(mc.utils.VarDecl, mc.checker.Helper, mc.utils.Utils, mc.utils.Visitor, mc.utils.Continue, mc.astgen.ASTGeneration, mc.utils.Stmt, mc.checker.StaticChecker, mc.utils.Expr, mc.utils.FuncDecl, mc.utils.ArrayCell, mc.utils.Program, mc.utils.Decl, mc.parser.UncloseString, mc.utils.FloatType, mc.checker.UnreachableStatement, mc.parser.ProcessError, mc.utils.FloatLiteral, mc.utils.IntLiteral, mc.utils.ArrayPointerType, mc.checker.Parameter, mc.Timed, mc.utils.LHS, mc.checker.Variable, mc.utils.Literal, mc.utils.Dowhile, mc.checker.TypeMismatchInStatement, mc.utils.If, mc.utils.Type, mc.checker.Identifier, mc.utils.BinaryOp, mc.checker.TypeMismatchInExpression, mc.checker.Undeclared, mc.utils.AST, mc.utils.CallExpr, mc.checker.Kind, mc.checker.ContinueNotInLoop, mc.utils.For, mc.parser.NeverHappen, mc.utils.Break, mc.parser.ErrorToken, mc.Compiler, mc.utils.UnaryOp, mc.checker.Redeclared, mc.checker.FunctionNotReturn, mc.utils.ArrayType, mc.utils.BaseVisitor, mc.utils.StringType, mc.utils.StringLiteral, mc.utils.IntType, mc.utils.VoidType, mc.parser.IllegalEscape, mc.utils.Return, mc.utils.BooleanLiteral, mc.utils.Block, mc.checker.BreakNotInLoop, mc.utils.BoolType, mc.utils.Id, mc.checker.Function)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\Utils.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\astgen\ASTGeneration.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\BaseVisitor.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\parser\ProcessError.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\Main.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\checker\StaticCheck.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\AST.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\Visitor.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\checker\StaticError.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set(C:\Users\rin.RIN\Desktop\ass2\src\main\mc\astgen\ASTGeneration.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\parser\ProcessError.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\Main.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(mc.utils.VarDecl, mc.checker.Helper, mc.utils.Utils, mc.utils.Visitor, mc.utils.Continue, mc.astgen.ASTGeneration, mc.utils.Stmt, mc.checker.StaticChecker, mc.utils.Expr, mc.utils.FuncDecl, mc.utils.ArrayCell, mc.utils.Program, mc.utils.Decl, mc.parser.UncloseString, mc.utils.FloatType, mc.checker.UnreachableStatement, mc.parser.ProcessError, mc.utils.FloatLiteral, mc.utils.IntLiteral, mc.utils.ArrayPointerType, mc.checker.Parameter, mc.Timed, mc.utils.LHS, mc.checker.Variable, mc.utils.Literal, mc.utils.Dowhile, mc.checker.TypeMismatchInStatement, mc.utils.If, mc.utils.Type, mc.checker.Identifier, mc.utils.BinaryOp, mc.checker.TypeMismatchInExpression, mc.checker.Undeclared, mc.utils.AST, mc.utils.CallExpr, mc.checker.Kind, mc.checker.ContinueNotInLoop, mc.utils.For, mc.parser.NeverHappen, mc.utils.Break, mc.parser.ErrorToken, mc.Compiler, mc.utils.UnaryOp, mc.checker.Redeclared, mc.checker.FunctionNotReturn, mc.utils.ArrayType, mc.utils.BaseVisitor, mc.utils.StringType, mc.utils.StringLiteral, mc.utils.IntType, mc.utils.VoidType, mc.parser.IllegalEscape, mc.utils.Return, mc.utils.BooleanLiteral, mc.utils.Block, mc.checker.BreakNotInLoop, mc.utils.BoolType, mc.utils.Id, mc.checker.Function)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\Utils.scala, D:\HK171\NLNNLT\Assignment\mc\target\scala-2.12\src_managed\main\src\main\mc\parser\MCBaseVisitor.java, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\checker\StaticError.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\utils\Visitor.scala, D:\HK171\NLNNLT\Assignment\mc\target\scala-2.12\src_managed\main\src\main\mc\parser\MCParser.java, D:\HK171\NLNNLT\Assignment\mc\target\scala-2.12\src_managed\main\src\main\mc\parser\MCVisitor.java, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\astgen\ASTGeneration.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\BaseVisitor.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\parser\ProcessError.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\Main.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\astgen\ASTGeneration.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\utils\Utils.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\checker\StaticCheck.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\AST.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\parser\ProcessError.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\utils\BaseVisitor.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\utils\Visitor.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\Main.scala, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\utils\AST.scala, C:\Users\rin.RIN\Desktop\ass2\src\main\mc\checker\StaticError.scala, D:\HK171\NLNNLT\Assignment\mc\target\scala-2.12\src_managed\main\src\main\mc\parser\MCLexer.java, D:\HK171\NLNNLT\Assignment\mc\src\main\mc\checker\StaticCheck.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 13 sources: invalidated sources (22) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 9 Scala sources and 4 Java sources to D:\HK171\NLNNLT\Assignment\mc\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.0:compile for Scala 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.0:compile for Scala 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 41dc7dd0 for Scala compiler version 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jdk1.8.0_144\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_144\jre\classes;C:\Users\rin.RIN\.sbt\boot\scala-2.12.3\lib\scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	D:\HK171\NLNNLT\Assignment\mc\target\scala-2.12\classes;D:\HK171\NLNNLT\Assignment\mc\.\external\antlr-4.6-complete.jar;D:\HK171\NLNNLT\Assignment\mc\.\external\jasmin.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 29.347764748 s[0m
[0m[[0m[0mdebug[0m] [0m[0mAttempting to call com.sun.tools.javac.api.JavacTool@d6b1835 directly...[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation took 3.874645721 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava analysis took 0.078389747 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation + analysis took 4.002567386 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mc.checker.Helper...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(mc.checker.Helper)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mc.checker.Helper)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mc.checker.Helper,ModifiedNames(changes = UsedName(getDeclarationName,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(throwTypeMismatchInExpression,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hideDeclaration,[Default]), UsedName(!=,[Default]), UsedName(getBuildInFunction,[Default]), UsedName(equals,[Default]), UsedName(throwUndeclared,[Default]), UsedName(hashCode,[Default]), UsedName(getExpressionType,[Default]), UsedName(asInstanceOf,[Default]), UsedName(throwRedeclared,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(throwUnreachableStatement,[Default]), UsedName(notifyAll,[Default]), UsedName(lookup,[Default]), UsedName(throwTypeMismatchInStatement,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(getDeclarationType,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(checkDupplication,[Default]), UsedName(Helper,[Default]), UsedName(toString,[Default]), UsedName(checkCallExpresstionParamaters,[Default]))) invalidates 1 classes due to The mc.checker.Helper has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getDeclarationName,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(throwTypeMismatchInExpression,[Default]), UsedName($isInstanceOf,[Default]), UsedName(hideDeclaration,[Default]), UsedName(!=,[Default]), UsedName(getBuildInFunction,[Default]), UsedName(equals,[Default]), UsedName(throwUndeclared,[Default]), UsedName(hashCode,[Default]), UsedName(getExpressionType,[Default]), UsedName(asInstanceOf,[Default]), UsedName(throwRedeclared,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(throwUnreachableStatement,[Default]), UsedName(notifyAll,[Default]), UsedName(lookup,[Default]), UsedName(throwTypeMismatchInStatement,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(getDeclarationType,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(checkDupplication,[Default]), UsedName(Helper,[Default]), UsedName(toString,[Default]), UsedName(checkCallExpresstionParamaters,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(mc.checker.Helper)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mc.checker.StaticChecker...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(mc.checker.StaticChecker)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mc.checker.StaticChecker)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mc.checker.StaticChecker,ModifiedNames(changes = UsedName(getDeclarationName,[Default]), UsedName(visitArrayType,[Default]), UsedName(visitFloatLiteral,[Default]), UsedName(throwTypeMismatchInExpression,[Default]), UsedName(visitVoidType,[Default]), UsedName(visitBooleanLiteral,[Default]), UsedName(hideDeclaration,[Default]), UsedName(visitIntLiteral,[Default]), UsedName(visitStringLiteral,[Default]), UsedName(getBuildInFunction,[Default]), UsedName(throwUndeclared,[Default]), UsedName(getExpressionType,[Default]), UsedName(visitStringType,[Default]), UsedName(throwRedeclared,[Default]), UsedName(visitBoolType,[Default]), UsedName(visitFloatType,[Default]), UsedName(throwUnreachableStatement,[Default]), UsedName(StaticChecker,[Default]), UsedName(toListSymbol,[Default]), UsedName(throwTypeMismatchInStatement,[Default]), UsedName(visitIntType,[Default]), UsedName(getDeclarationType,[Default]), UsedName(checkType,[Default]), UsedName(visitArrayPointerType,[Default]), UsedName(checkDupplication,[Default]), UsedName(checkCallExpresstionParamaters,[Default]))) invalidates 1 classes due to The mc.checker.StaticChecker has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getDeclarationName,[Default]), UsedName(visitArrayType,[Default]), UsedName(visitFloatLiteral,[Default]), UsedName(throwTypeMismatchInExpression,[Default]), UsedName(visitVoidType,[Default]), UsedName(visitBooleanLiteral,[Default]), UsedName(hideDeclaration,[Default]), UsedName(visitIntLiteral,[Default]), UsedName(visitStringLiteral,[Default]), UsedName(getBuildInFunction,[Default]), UsedName(throwUndeclared,[Default]), UsedName(getExpressionType,[Default]), UsedName(visitStringType,[Default]), UsedName(throwRedeclared,[Default]), UsedName(visitBoolType,[Default]), UsedName(visitFloatType,[Default]), UsedName(throwUnreachableStatement,[Default]), UsedName(StaticChecker,[Default]), UsedName(toListSymbol,[Default]), UsedName(throwTypeMismatchInStatement,[Default]), UsedName(visitIntType,[Default]), UsedName(getDeclarationType,[Default]), UsedName(checkType,[Default]), UsedName(visitArrayPointerType,[Default]), UsedName(checkDupplication,[Default]), UsedName(checkCallExpresstionParamaters,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(mc.checker.StaticChecker)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mc.checker.Val...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(mc.checker.Val)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mc.checker.Val)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mc.checker.Val,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName($isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(Val,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The mc.checker.Val has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName($isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(Val,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(mc.checker.Val)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mc.checker.Symbol...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(mc.checker.Symbol)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mc.checker.Symbol)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mc.checker.Symbol,ModifiedNames(changes = UsedName(canEqual,[Default]), UsedName(eq,[Default]), UsedName(typ,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(mc;checker;Symbol;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(value,[Default]), UsedName(productPrefix,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy$default$1,[Default]), UsedName(notify,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]), UsedName(Symbol,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The mc.checker.Symbol has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(canEqual,[Default]), UsedName(eq,[Default]), UsedName(typ,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName(mc;checker;Symbol;init;,[Default]), UsedName($isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(value,[Default]), UsedName(productPrefix,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy$default$1,[Default]), UsedName(notify,[Default]), UsedName(name,[Default]), UsedName(synchronized,[Default]), UsedName(Symbol,[Default]), UsedName(getClass,[Default]), UsedName(copy$default$3,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(mc.checker.Symbol)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from mc.checker.FunctionType...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(mc.checker.FunctionType)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(mc.checker.FunctionType)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(mc.checker.FunctionType,ModifiedNames(changes = UsedName(canEqual,[Default]), UsedName(eq,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName($isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(accept,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(mc;checker;FunctionType;init;,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy$default$1,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(input,[Default]), UsedName(output,[Default]), UsedName(FunctionType,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The mc.checker.FunctionType has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(canEqual,[Default]), UsedName(eq,[Default]), UsedName(productArity,[Default]), UsedName(finalize,[Default]), UsedName($isInstanceOf,[Default]), UsedName(!=,[Default]), UsedName(accept,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName(mc;checker;FunctionType;init;,[Default]), UsedName(copy,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy$default$1,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(input,[Default]), UsedName(output,[Default]), UsedName(FunctionType,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(mc.checker.FunctionType)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
